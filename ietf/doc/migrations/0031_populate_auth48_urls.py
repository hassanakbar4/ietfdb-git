# Copyright The IETF Trust 2020, All Rights Reserved
# -*- coding: utf-8 -*-
# Generated by Django 1.11.29 on 2020-03-10 07:30
from __future__ import unicode_literals

from django.db import migrations
from re import match


def forward(apps, schema_editor):
    """Change StateDocEvent to Auth48StateDocEvent instances
    
    This converts all StateDocEvents that are in the 'auth48.*' states into
    Auth48StateDocEvent instances. If the event's desc has an AUTH48 link,
    populates the new auth48_url field with that value.
    """
    StateDocEvent = apps.get_model('doc', 'StateDocEvent')
    Auth48StateDocEvent = apps.get_model('doc', 'Auth48StateDocEvent')
    # auth48done is not used, but include it as a precaution
    auth48_event_slugs = ['auth48', 'auth48-done', 'auth48done']
    pattern = r'RFC Editor state changed to <a href="(.*)"><b>AUTH48.*</b></a>.*'
    for sde in StateDocEvent.objects.filter(state__slug__in=auth48_event_slugs):
        sde.__class__ = Auth48StateDocEvent  # change to new class
        urlmatch = match(pattern, sde.desc)  # Auth48 URL is usually in the event desc
        if urlmatch is None:
            url = ''  # A few events do not have auth48 links.
        else:
            url = urlmatch[1]
        sde.auth48_url = url
        # Since we fudged the __class__ of our event, Django expects there
        # is already a row for this instance in the Auth48StateDocEvent table.
        # Force an insert instead of an update so it will create the row.
        sde.save(force_insert=True)


def reverse(apps, schema_editor):
    """Do nothing - old versions will safely ignore the new data"""
    pass


class Migration(migrations.Migration):
    dependencies = [
        ('doc', '0030_auth48statedocevent'),
    ]

    operations = [
        migrations.RunPython(forward, reverse),
    ]
