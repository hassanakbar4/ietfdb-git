# -*- coding: utf-8 -*-
# Generated by Django 1.10.8 on 2017-09-20 11:58
from __future__ import unicode_literals

from django.db import migrations
from collections import Counter

counts = {'matches':0,'created':0}
adds = []

def forward(apps, schema_editor):
    MeetingRegistration = apps.get_model('stats','MeetingRegistration')
    Person = apps.get_model('person','Person')
    Email = apps.get_model('person','Email')
    for mr in MeetingRegistration.objects.filter(person__isnull=True):
        if len(mr.email) > 64:
            continue
        e = Email.objects.filter(address=mr.email).first()
        if e:
            mr.person = e.person
            mr.save()
        else:
            name = ('%s %s'%(mr.first_name,mr.last_name)).title()
            p = Person.objects.filter(name=name)
            if p.count()>1:
                #print name, "is ambiguous"
                pass
            elif p.count()==1:
                mr.person=p.first()
                mr.save()
                mr.person.email_set.create(address=mr.email)
            else:
                p = Person.objects.filter(name__endswith=' '+mr.last_name.title()).filter(name__contains=mr.first_name.title()+' ')
                if p.count()>1:
                    print name, "occurs in too many person objects"
                    pass
                elif p.count()==1:
                    print "Matching",name,"with",p.first().name
                    counts['matches'] += 1
                    mr.person=p.first()
                    mr.save()
                    mr.person.email_set.create(address=mr.email)
                else:
                    #print "Creating", name
                    adds.append(name)
                    counts['created'] += 1
                    p = Person.objects.create(name=name)
                    p.alias_set.create(name=name)
                    p.email_set.create(address=mr.email)
    print counts
    print Counter(adds).most_common(20)

def reverse(apps, schema_editor):
    pass

class Migration(migrations.Migration):

    dependencies = [
        ('stats', '0005_fix_registration_data'),
        ('person', '0020_auto_20170701_0325'),
    ]

    operations = [
        migrations.RunPython(forward,reverse)
    ]
